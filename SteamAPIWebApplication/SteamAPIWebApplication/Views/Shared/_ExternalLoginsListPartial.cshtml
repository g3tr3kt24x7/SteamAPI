@model SteamAPIWebApplication.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security
@using Microsoft.AspNet.Identity
@using SteamAPIWebApplication.Models
@*<h4>Use another service to log in.</h4>
<hr />*@
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0) {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        if (Request.IsAuthenticated)
        {
            using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
            {
                @Html.AntiForgeryToken()

                <ul class="nav navbar-nav navbar-right">
                    <li>
                        @*<div class="dropdown">
                            <a href="#" class="dropdown-toggle" type="button" data-toggle="dropdown">*@
                                @*@User.Identity.GetUserName()*@
                                @{Html.RenderAction("SteamProfile", "SteamVanityUserName");}
                            @*</a>
                            <ul class="dropdown-menu">
                                <li><a href="@Url.Action("UserGlobalStats","SteamVanityUserName")">My Profile</a></li>
                                <li><a href="@Url.Action("Index","SteamMatchDetails")">Match Details</a></li>*@
                                @*<li><a href="#">JavaScript</a></li>*@
                                @*<li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                            </ul>
                        </div>*@
                    </li>
                    @*<li>
                        @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "SteamVanityUserName", routeValues: null, htmlAttributes: new { title = "User Profile" })
                    </li>*@
                    
                </ul>
                @*<div class="dropdown">
                    <button class="dropdown-toggle" type="button" data-toggle="dropdown">
                        Dropdown Example
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="#">HTML</a></li>
                        <li><a href="#">CSS</a></li>
                        <li><a href="#">JavaScript</a></li>
                    </ul>
                </div>*@
            }
        }
        else
        {
            using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
            {
            @Html.AntiForgeryToken()
            <div class="nav navbar-nav navbar-right">
                @*id="socialLoginList"*@
                <p> 
                        @foreach (AuthenticationDescription p in loginProviders)
                        {
                            <button type="submit" class="btn btn-link" style="color:#eeeeee;text-decoration:none;margin-top:5px;" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">Login using your @p.AuthenticationType account</button>
                            
                        }
                </p>
            </div>
                }
            }
        }
}
